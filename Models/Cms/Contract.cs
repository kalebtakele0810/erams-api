// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace ERAManagementSystem.Models
{
    public partial class Contract
    {
        public Contract()
        {
            Advances = new HashSet<Advance>();
            AdvertisingDateSpns = new HashSet<AdvertisingDateSpn>();
            AdvertisingDates = new HashSet<AdvertisingDate>();
            AssessmentMetadata = new HashSet<AssessmentMetadatum>();
            Claims = new HashSet<Claim>();
            ConsultantsPerformances = new HashSet<ConsultantsPerformance>();
            ConsultantsPrograms = new HashSet<ConsultantsProgram>();
            ContactDetails = new HashSet<ContactDetail>();
            ContractAssignments = new HashSet<ContractAssignment>();
            ContractImplementers = new HashSet<ContractImplementer>();
            ContractPhases = new HashSet<ContractPhase>();
            ContractProgressPerformanceScores = new HashSet<ContractProgressPerformanceScore>();
            ContractorPrograms = new HashSet<ContractorProgram>();
            CurrencyBreakDowns = new HashSet<CurrencyBreakDown>();
            Deliverables = new HashSet<Deliverable>();
            Discussions = new HashSet<Discussion>();
            EngineeringEstimates = new HashSet<EngineeringEstimate>();
            ErrorReports = new HashSet<ErrorReport>();
            Guarantees = new HashSet<Guarantee>();
            InverseDesignContract = new HashSet<Contract>();
            InverseWorkContract = new HashSet<Contract>();
            Ipcs = new HashSet<Ipc>();
            Measurements = new HashSet<Measurement>();
            QuantityChanges = new HashSet<QuantityChange>();
            Supplements = new HashSet<Supplement>();
            TeamLeaderNotes = new HashSet<TeamLeaderNote>();
            VariationOrders = new HashSet<VariationOrder>();
        }

        public int ContractId { get; set; }
        public int? EngineeringEstimateId { get; set; }
        public int? DesignContractId { get; set; }
        public int? WorkContractId { get; set; }
        public int? ProjectId { get; set; }
        public string ContractNumber { get; set; }
        public string ContractName { get; set; }
        public DateTime? ProcurementAssignmentDate { get; set; }
        public string CapacityBuilding { get; set; }
        public DateTime? EqPqOpeningDate { get; set; }
        public int? SubmittedEqPq { get; set; }
        public string InvitedBidders { get; set; }
        public int? SubmittedBids { get; set; }
        public DateTime? FinancialBidOpeningDate { get; set; }
        public DateTime? FinancialEvaluationApprovalDate { get; set; }
        public int? OpenedBids { get; set; }
        public DateTime? HandoverDate { get; set; }
        public string ContractType { get; set; }
        public int? Contractor { get; set; }
        public DateTime? ContractSignedOn { get; set; }
        public DateTime? ContractCommencement { get; set; }
        public int? ContractPeriod { get; set; }
        public int? MobilizationPeriod { get; set; }
        public DateTime? ActualCompletionDate { get; set; }
        public DateTime? ActualEndOfDefectsLiability { get; set; }
        public string ControllingRegion { get; set; }
        public decimal? Budget { get; set; }
        public bool? VatInclusive { get; set; }
        public string LastEditedBy { get; set; }
        public string CreatedBy { get; set; }
        public int? BudgetYear { get; set; }
        public decimal? OriginalContractAmount { get; set; }
        public decimal? TotalofBills { get; set; }
        public decimal? Sps { get; set; }
        public decimal? Dayworks { get; set; }
        public decimal? Contingency { get; set; }
        public decimal? Vat { get; set; }
        public decimal? OneTimeVariationOrderLimit { get; set; }
        public decimal? MultipleVariationOrderLimitInPercentage { get; set; }
        public decimal? VatRate { get; set; }
        public bool? IsAwarded { get; set; }
        public string CreatingDirectorate { get; set; }
        public bool DeductRetentionBeforeVatCalc { get; set; }
        public bool? IsSingleBidderContract { get; set; }
        public bool? IsOriginalProgramEditable { get; set; }
        public DateTime? CreatedOn { get; set; }
        public DateTime? LastModifiedOn { get; set; }
        public string InactivityReason { get; set; }
        public bool IsContractInactive { get; set; }
        public bool IsCommencementDateModified { get; set; }
        public DateTime? FinalPaymentCertificateIssued { get; set; }
        public decimal AdvanceAmount { get; set; }

        public virtual ContractType ContractTypeNavigation { get; set; }
        public virtual Firm ContractorNavigation { get; set; }
        public virtual Contract DesignContract { get; set; }
        public virtual EngineeringEstimate EngineeringEstimate { get; set; }
        public virtual Project Project { get; set; }
        public virtual Contract WorkContract { get; set; }
        public virtual ICollection<Advance> Advances { get; set; }
        public virtual ICollection<AdvertisingDateSpn> AdvertisingDateSpns { get; set; }
        public virtual ICollection<AdvertisingDate> AdvertisingDates { get; set; }
        public virtual ICollection<AssessmentMetadatum> AssessmentMetadata { get; set; }
        public virtual ICollection<Claim> Claims { get; set; }
        public virtual ICollection<ConsultantsPerformance> ConsultantsPerformances { get; set; }
        public virtual ICollection<ConsultantsProgram> ConsultantsPrograms { get; set; }
        public virtual ICollection<ContactDetail> ContactDetails { get; set; }
        public virtual ICollection<ContractAssignment> ContractAssignments { get; set; }
        public virtual ICollection<ContractImplementer> ContractImplementers { get; set; }
        public virtual ICollection<ContractPhase> ContractPhases { get; set; }
        public virtual ICollection<ContractProgressPerformanceScore> ContractProgressPerformanceScores { get; set; }
        public virtual ICollection<ContractorProgram> ContractorPrograms { get; set; }
        public virtual ICollection<CurrencyBreakDown> CurrencyBreakDowns { get; set; }
        public virtual ICollection<Deliverable> Deliverables { get; set; }
        public virtual ICollection<Discussion> Discussions { get; set; }
        public virtual ICollection<EngineeringEstimate> EngineeringEstimates { get; set; }
        public virtual ICollection<ErrorReport> ErrorReports { get; set; }
        public virtual ICollection<Guarantee> Guarantees { get; set; }
        public virtual ICollection<Contract> InverseDesignContract { get; set; }
        public virtual ICollection<Contract> InverseWorkContract { get; set; }
        public virtual ICollection<Ipc> Ipcs { get; set; }
        public virtual ICollection<Measurement> Measurements { get; set; }
        public virtual ICollection<QuantityChange> QuantityChanges { get; set; }
        public virtual ICollection<Supplement> Supplements { get; set; }
        public virtual ICollection<TeamLeaderNote> TeamLeaderNotes { get; set; }
        public virtual ICollection<VariationOrder> VariationOrders { get; set; }
    }
}